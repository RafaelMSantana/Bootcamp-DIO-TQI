{"ast":null,"code":"var _jsxFileName = \"/home/rafaelski/Documentos/Projetos/Bootcamp-DIO-TQI/M\\xF3dulo React/Pr\\xE1ticas avan\\xE7adas em projetos com ReactJS/advanced-reactjs-dio/src/Twitter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst areEqual = (prevProps, nextProps) => {\n  return true;\n};\n\nfunction Twitter(props) {\n  _s();\n\n  const {\n    loading\n  } = props; // componentDidMount\n\n  useEffect(() => {\n    const {\n      posts,\n      loading\n    } = props;\n    console.log('componentDidMount', posts);\n    console.log('componentDidMount:loading', loading);\n  }, []);\n  useEffect(() => {\n    console.log('componentDidUpdate', loading);\n  }, [loading]);\n  /* componentDidUpdate = (prevProps) => {\n      const { loading } = props\n      if (props.loading !== prevProps.loading) {\n          console.log('componentDidUpdate: loading', loading)\n      }\n  }\n   componentWillUnmount = () => {\n      console.log('componentWillUnmount: fui removido')\n  }\n   shouldComponentUpdate = (nextProps, nextState) => {\n      return state.tweet !== nextState.tweet\n  }\n   tweet = () => {\n      setState({\n          tweet: true\n      })\n  }  */\n\n  const {\n    posts\n  } = props; //console.log('render', posts)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"tests\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Twitter, \"3ubReDTFssvu4DHeldAg55cW/CI=\");\n\n_c = Twitter;\nexport default Twitter;\n\nvar _c;\n\n$RefreshReg$(_c, \"Twitter\");","map":{"version":3,"names":["React","useEffect","memo","areEqual","prevProps","nextProps","Twitter","props","loading","posts","console","log"],"sources":["/home/rafaelski/Documentos/Projetos/Bootcamp-DIO-TQI/Módulo React/Práticas avançadas em projetos com ReactJS/advanced-reactjs-dio/src/Twitter.js"],"sourcesContent":["import React, { useEffect, memo } from 'react'\n\nconst areEqual = (prevProps, nextProps) => {\n    return true\n}\n\nfunction Twitter (props) {\n    const { loading } = props\n\n    // componentDidMount\n    useEffect(()=> {\n        const { posts, loading } = props\n        console.log('componentDidMount', posts)\n        console.log('componentDidMount:loading', loading)\n    }, [])\n\n    useEffect(() => {\n        console.log('componentDidUpdate', loading)\n    }, [loading])\n\n    /* componentDidUpdate = (prevProps) => {\n        const { loading } = props\n        if (props.loading !== prevProps.loading) {\n            console.log('componentDidUpdate: loading', loading)\n        }\n    }\n\n    componentWillUnmount = () => {\n        console.log('componentWillUnmount: fui removido')\n    }\n\n    shouldComponentUpdate = (nextProps, nextState) => {\n        return state.tweet !== nextState.tweet\n    }\n\n    tweet = () => {\n        setState({\n            tweet: true\n        })\n    }  */\n    \n    const { posts } = props\n    //console.log('render', posts)\n    return (\n        <div>\n            {/* <button onClick={tweet}>Re-render</button> */}\n            tests\n        </div>\n    )\n    \n}\n\n\nexport default Twitter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,IAA3B,QAAuC,OAAvC;;;AAEA,MAAMC,QAAQ,GAAG,CAACC,SAAD,EAAYC,SAAZ,KAA0B;EACvC,OAAO,IAAP;AACH,CAFD;;AAIA,SAASC,OAAT,CAAkBC,KAAlB,EAAyB;EAAA;;EACrB,MAAM;IAAEC;EAAF,IAAcD,KAApB,CADqB,CAGrB;;EACAN,SAAS,CAAC,MAAK;IACX,MAAM;MAAEQ,KAAF;MAASD;IAAT,IAAqBD,KAA3B;IACAG,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,KAAjC;IACAC,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCH,OAAzC;EACH,CAJQ,EAIN,EAJM,CAAT;EAMAP,SAAS,CAAC,MAAM;IACZS,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCH,OAAlC;EACH,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT;EAIA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAKI,MAAM;IAAEC;EAAF,IAAYF,KAAlB,CAnCqB,CAoCrB;;EACA,oBACI;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH;;GA5CQD,O;;KAAAA,O;AA+CT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}